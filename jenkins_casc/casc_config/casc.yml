jenkins:
  securityRealm:
    local:
      allowsSignup: false
      users:
       - id: ${JENKINS_ADMIN_ID}
         password: ${JENKINS_ADMIN_PASSWD}
       - id: guest
         password: guest
  authorizationStrategy:
    globalMatrix:
      permissions:
        - "USER:Overall/Administer:${JENKINS_ADMIN_ID}"
        - "GROUP:Overall/Read:authenticated"
        - "USER:Job/Build:guest"
        - "USER:Job/Cancel:guest"
        - "USER:Job/Read:guest"
        - "USER:Job/Workspace:guest"
        - "USER:Run/Replay:guest"
        - "USER:Run/Update:guest"
  # make sure our jenkins master has 1 executor
  # so that we can run our init-system pipeline
  numExecutors: 1
  labelString: "jenkins"
  disableRememberMe: true
  markupFormatter:
    rawHtml:
      disableSyntaxHighlighting: false
  # Setup the nodes for pipelines
  nodes:
  - permanent:
      # Setup the node docker
      labelString: "dockerHost linux rocky"
      launcher:
        ssh:
          credentialsId: "docker-host-credentials"
          # Using jenkins in docker the node should always be this one
          # Not if there is a remote server with docker
          host: ${DOCKER_HOST_IP}
          port: 22
          sshHostKeyVerificationStrategy: "nonVerifyingKeyVerificationStrategy"
      name: "docker-host"
      remoteFS: "/home/${DOCKER_NODE_USER}/jenkins_dir"
      retentionStrategy: "always"
      numExecutors: 3
  # Setup the cloud docker
  clouds:
  - docker:
      containerCap: 3
      dockerApi:
        connectTimeout: 60
        dockerHost:
          uri: "tcp://${DOCKER_HOST_IP}:4243"
        readTimeout: 60
      name: "docker"
      templates:
      - connector:
          ssh:
            sshKeyStrategy:
              manuallyConfiguredSSHKey:
                credentialsId: "agent-credentials"
                sshHostKeyVerificationStrategy: "nonVerifyingKeyVerificationStrategy"
        dockerTemplateBase:
          cpuPeriod: 0
          cpuQuota: 0
          image: "localhost:5000/rocky-agent:latest"
        labelString: "dockerAgent container rocky linux"
        name: "rocky-agent"
        pullTimeout: 300
        remoteFs: "/home/jenkins"
  # Manage views and setup the default one (primaryView)
  primaryView:
    list:
      columns:
      - "status"
      - "weather"
      - "jobName"
      - "lastSuccess"
      - "lastFailure"
      - "lastDuration"
      - "buildButton"
      jobNames:
      - "init-system"
      name: "start process"
  views:
  - list:
      columns:
      - "status"
      - "weather"
      - "jobName"
      - "lastSuccess"
      - "lastFailure"
      - "lastDuration"
      - "buildButton"
      - "favoriteColumn"
      jobNames:
      - "init-system"
      name: "start process"
  - list:
      columns:
      - "status"
      - "weather"
      - "jobName"
      - "lastSuccess"
      - "lastFailure"
      - "lastDuration"
      - "buildButton"
      - "favoriteColumn"
      jobNames:
      - "registry-process"
      - "check-agents"
      name: "triggered jobs"
  - list:
      columns:
      - "status"
      - "weather"
      - "jobName"
      - "lastSuccess"
      - "lastFailure"
      - "lastDuration"
      - "buildButton"
      - "favoriteColumn"
      jobNames:
      - "my-pipeline"
      - "test"
      name: "few job examples"
# Variety of settings
unclassified:
  # Setup english as language whatever the browser language
  locale:
    ignoreAcceptLanguage: true
    systemLocale: "english"
  location:
    adminAddress: "myemail@ok.com"
    url: "http://localhost:8088/"
# Credentials
credentials:
  system:
    domainCredentials:
    - credentials:
      - usernamePassword:
          # Credentials for the node docker
          description: "docker node"
          id: "docker-host-credentials"
          password: ${DOCKER_NODE_PASSWD}
          scope: GLOBAL
          username: ${DOCKER_NODE_USER}
      - usernamePassword:
          description: "rocky agent"
          id: "agent-credentials"
          password: "${AGENT_PASSWD}"
          scope: GLOBAL
          username: "${AGENT_USER}"
      - usernamePassword:
          description: "my-github"
          id: "my-git-credentials"
          password: "${GITHUB_TOKEN}"
          scope: GLOBAL
          username: "${GITHUB_USER}"
      - usernamePassword:
          description: "gitlab"
          id: "gitlab-credentials"
          password: "${GITLAB_TOKEN}"
          scope: GLOBAL
          username: "${GITLAB_USER}"
# specify the seedjob groovy script that will create the  pipelines for us
jobs:
  - file: /usr/local/jobs/main.groovy
  - file: /usr/local/jobs/examples.groovy